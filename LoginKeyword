package meetingCreation

import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.annotation.Keyword
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import com.kms.katalon.core.util.KeywordUtil
import com.kms.katalon.core.testdata.TestDataFactory

import internal.GlobalVariable

public class Login {

	@Keyword
	static def loginRole(String userRole) {
		String env = GlobalVariable.env ?: 'StagingEnvironment'
		def dataPath = "Data Files/" + env
		def testData = TestDataFactory.findTestData(dataPath)

		if (testData == null) {
			KeywordUtil.markFailedAndStop("CSV for environment '${env}' not found!")
		}

		String username = ""
		String password = ""
		boolean roleFound = false

		// Loop through CSV rows to find matching userRole
		for (int i = 1; i <= testData.getRowNumbers(); i++) {
			String roleFromCsv = testData.getValue("Role", i)
			if (roleFromCsv.equalsIgnoreCase(userRole)) {
				username = testData.getValue("Username", i)
				password = testData.getValue("Password", i)
				roleFound = true
				break
			}
		}

		if (!roleFound) {
			throw new IllegalArgumentException("Role '${userRole}' not found in ${env}.csv")
		}

		// Navigate to login page
		WebUI.navigateToUrl(GlobalVariable.SystemURL + 'login')
		WebUI.setViewPortSize(1920, 1080)

		boolean isProd = GlobalVariable.SystemURL.toLowerCase().contains('prod')

		if (isProd) {
			WebUI.waitForElementClickable(findTestObject('Object Repository/Page_Login/ProdLoginButton'), 10)
			WebUI.click(findTestObject('Object Repository/Page_Login/ProdLoginButton'))

			WebUI.waitForElementVisible(findTestObject('Object Repository/Page_Login/InputProdUsername'), 10)
			WebUI.setText(findTestObject('Object Repository/Page_Login/InputProdUsername'), username)
			WebUI.setEncryptedText(findTestObject('Object Repository/Page_Login/InputProdPassword'), password)
			WebUI.click(findTestObject('Object Repository/Page_Login/ProdSubmitButton'))
		} else {
			WebUI.waitForElementVisible(findTestObject('Object Repository/Page_Login/input_Email'), 10)
			WebUI.setText(findTestObject('Object Repository/Page_Login/input_Email'), username)
			WebUI.setEncryptedText(findTestObject('Object Repository/Page_Login/input_Password'), password)
			WebUI.click(findTestObject('Object Repository/Page_Login/button_Login'))
		}

		// Verify login success unless negative test
		if (!userRole.equalsIgnoreCase("wronguser") && !userRole.equalsIgnoreCase("unauthorized")) {
			WebUI.verifyElementVisible(findTestObject('Object Repository/Page_Login/UI_SystemHeader'))
		}

		return [username: username, password: password]
	}
}
