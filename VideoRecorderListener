import com.kms.katalon.core.annotation.*
import com.kms.katalon.core.context.TestCaseContext
import com.kms.katalon.core.configuration.RunConfiguration
import java.awt.*

class VideoRecorderListener {
    private CustomScreenRecorder recorder
    private String testName

    @BeforeTestCase
    def beforeTestCase(TestCaseContext testContext) {
        testName = testContext.getTestCaseId().replace("/", "_")
    }

    @AfterTestCase
    def afterTestCase(TestCaseContext testContext) {
        try {
            // Correct way to check test status in Katalon 10.2.4
            if (testContext.getTestCaseStatus() == "FAILED") {
                startRecording()
                Thread.sleep(30000) // Record for 30 seconds
                stopRecording()
            }
        } catch (Exception e) {
            println "‚ùå Error handling recording: ${e.message}"
            e.printStackTrace()
        }
    }

    private void startRecording() {
        try {
            File videoDir = new File(RunConfiguration.getReportFolder(), "failure_videos")
            GraphicsConfiguration gc = GraphicsEnvironment
                .getLocalGraphicsEnvironment()
                .getDefaultScreenDevice()
                .getDefaultConfiguration()

            recorder = new CustomScreenRecorder(gc, videoDir, testName)
            recorder.start()
            println "üé• Started recording for failed test: $testName"
        } catch (Exception e) {
            println "‚ùå Failed to start recording: ${e.message}"
        }
    }

    private void stopRecording() {
        try {
            if (recorder != null) {
                recorder.stop()
                println "‚èπ Stopped recording for test: $testName"
            }
        } catch (Exception e) {
            println "‚ö†Ô∏è Error stopping recording: ${e.message}"
        }
    }
}
